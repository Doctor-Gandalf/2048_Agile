#!/usr/bin/python3

from curses import wrapper
from os import chdir
from os.path import dirname, realpath

from controller.colorcontroller import create_colorschemes
from controller.tilecontroller import set_tile_colors
from model.board import board, place_tile
from view.board.initialize import *
from view.board.demo import demo
from view.tilecolors.tileview import draw_board

__author__ = 'Kellan Childers'
"""A simple 2048 clone written for terminals using Python with the Curses framework."""
# TODO fix odd dimension display issue


def app(stdscr):
    """Start and control the app.

    :param stdscr: the standard screen
    :return: null
    """

    # Set up color schemes
    create_colorschemes()
    set_tile_colors()

    # Startup screen and draw board visuals.
    initialize_window(stdscr)
    draw_board_background(stdscr)

    # Add all tiles to demo appearance
    demo()
    draw_board(stdscr, board)

    # Run until a key is pressed; useful for testing startup visuals.
    stdscr.getkey()

    for y in range(len(board[0])):
        for x in range(len(board)):
            board[x][y] = None

    place_tile(board)
    place_tile(board)

    reset_board(stdscr)
    draw_board(stdscr, board)

    stdscr.getkey()

if __name__ == "__main__":
    # App has to change directories in case it was opened outside its folder.
    chdir(dirname(realpath(__file__)))

    # curses.wrapper ensures that program will always fully exit from curses mode if an error occurs.
    wrapper(app)
